executors:
  cypress:
    docker:
      - image: cypress/base:12
        environment:
          TERM: xterm
    working_directory: ~/iCommerce

commands:
  restore_yarn_install:
    steps:
      - restore_cache:
          name: Restore Cache [yarn install]
          key: yarn-modules-{{ checksum "yarn.lock" }}
  restore_cypress_install:
    steps:
      - restore_cache:
          name: Restore Cache [cypress]
          key: cypress-{{ checksum "yarn.lock" }}
  yarn_install:
    steps:
      - run:
          name: Install dep
          command: yarn install
orbs:
  node: circleci/node@3.0.0

version: 2.1
jobs:
  checkout_code:
    executor: cypress
    steps:
      - checkout
      - restore_yarn_install
      - restore_cypress_install
      - yarn_install
      - save_cache:
          key: yarn-modules-{{ checksum "yarn.lock"}}
          paths:
            - ./node_modules
      - save_cache:
          key: cypress-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
  test:
    executor: cypress
    environment:
      CC_TEST_REPORTER_ID: 3498ce0f780b1fdddb255c461daea02ad3fbbc20b03f3c889390d01db9b00863
    steps:
      - checkout
      - restore_yarn_install
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - run:
          name: Run coverage tests
          command: yarn test-coverage
      - run:
          name: Upload code coverage
          command: |
            ./cc-test-reporter format-coverage -t lcov -o build/logs/coverage-final.json build/logs/lcov.info
            ./cc-test-reporter upload-coverage -i build/logs/coverage-final.json
workflows:
  version: 2.1
  main:
    jobs:
      - checkout_code:
          context: artifactory
      - test:
          requires:
            - checkout_code
